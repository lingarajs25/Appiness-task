{"version":3,"sources":["Components/Login.js","Components/NavBar.js","Components/UserTable.js","Components/Dashboard.js","App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["connect","state","Credentials","props","className","name","initialValues","remember","onFinish","values","email","password","username","url","window","location","href","encodeURIComponent","message","warn","Item","rules","type","required","prefix","UserOutlined","placeholder","LockOutlined","htmlType","Brand","fontSize","marginLeft","color","paddingBottom","marginBottom","height","paddingLeft","paddingTop","marginTop","NavBar","Navbar","id","light","expand","NavbarBrand","style","Nav","navbar","NavLink","NavItem","backgroundColor","tag","Link","React","Component","userinfo","columns","title","dataIndex","key","UserTable","users","i","length","push","Fragment","Toast","ToastHeader","ToastBody","dataSource","users_data","user_name","pass","queryString","parse","decodeURIComponent","search","App","exact","path","component","Login","Dashboard","Boolean","hostname","match","combineReducers","ReactDOM","render","store","createStore","reducers","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.56ad66b7.chunk.js","sourcesContent":["import React from 'react';\nimport { message,Form, Input, Button } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport './custom.css';\nimport {connect} from 'react-redux';\n\n\nconst Login =(props)=>{\n\n    let onFinish = values => {\n        let email=values.email;\n        let password=values.password;\n        if(email=== props.Credentials.username &&  password===props.Credentials.password){\n              let url=`email=${email}&password=${password}`\n              window.location.href='/dashboard?'+encodeURIComponent(url)\n        }else{\n          message.warn('Invalid Email/ Password...')\n        }\n      };\n      return (\n        <div className='form-layout'>\n        <Form name=\"normal_login\" className=\"login-form\"\n          initialValues={{\n            remember: true,\n          }}\n          onFinish={onFinish}\n        >\n          <Form.Item name=\"email\"\n              rules={[\n                {\n                  type: 'email',\n                  message: 'The input is not valid E-mail!',\n                },\n                {\n                  required: true,\n                  message: 'Please input your E-mail!',\n                },\n              ]}\n          >\n            <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Email\" />\n          </Form.Item>\n          <Form.Item name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your Password!',\n              },\n            ]}\n          >\n            <Input\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          </Form.Item>\n       \n          <Form.Item>\n            <Button type=\"primary\"  htmlType=\"submit\" className=\"login-form-button\">\n              Log in\n            </Button>\n          </Form.Item>\n        </Form>\n        </div>\n      );\n}\n \nconst mapStateToProps=(state)=>{\n    return {Credentials:state.Credentials}\n}\nexport default connect(mapStateToProps)(Login);\n\n","import React from 'react';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, UncontrolledDropdown, DropdownToggle } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport './nav.css'\n  const Brand = {\n    fontSize:'24px',\n    marginLeft:'35px',\n    color:'#fff',\n    paddingBottom:'50px',\n    marginBottom:'-7px',\n    height:'40px',\n    paddingLeft:'1px',\n    paddingTop: '20px',\n    marginTop: '-8px'\n  };\n\nexport default class NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div>\n     \n\n<Navbar id=\"nav\" className=\"navbar navbar-default navbar-fixed-top be-top-header\" light expand=\"xs\">\n<NavbarBrand style={Brand} className=\"brand\" href=\"/\">Appiness Interactive</NavbarBrand>\n        \n        <Nav className=\"nav navbar-nav\" navbar>\n          <NavLink></NavLink>\n          <NavItem className=\"navLink\">\n          </NavItem>\n              </Nav>\n            <Nav className=\"ml-auto\" navbar style={{color:'blue'}}>\n\n              <button style={{backgroundColor:\"#000\"}}><a tag={Link} style={{color:\"#fff\",marginLeft:'7px'}} href=\"/\">Logout</a> </button>\n          </Nav>\n        </Navbar>\n      </div>\n    );\n  \n  }\n}\n;","import React from 'react';\nimport { Table, Tag  } from 'antd';\nimport { Toast, ToastBody, ToastHeader } from 'reactstrap';\nimport NavBar from './NavBar';\nimport './custom.css';\n\n\nconst userinfo=[]\nconst columns = [\n    {\n        title: 'Id',\n        dataIndex: 'id',\n        key: 'id',\n        \n      },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: 'Age',\n      dataIndex: 'age',\n      key: 'age',\n    },\n    {\n        title: 'Gender',\n        dataIndex: 'gender',\n        key: 'gender',\n      },\n    {\n      title: 'Address',\n      dataIndex: 'address',\n      key: 'address',\n    },\n    {\n      title: 'Mobile No',\n      key: 'phone',\n      dataIndex: 'phone',\n    },\n    \n  ];\n\n  \nexport default function UserTable({users}){\n\n\n        for(let i=0;i<users.length;i++){\n\n              userinfo.push({\n\n                  'id':users[i]['id'],\n                  'name':users[i]['name'],\n                  'age':users[i]['age'],\n                  'gender':users[i]['gender'],\n                  'address':users[i]['email'],\n                  'phone':[users[i]['phoneNo']]\n              })\n        }\n\n    return (\n\n        <React.Fragment>\n            <NavBar />\n\n            <div className=\"p-3 my-2 rounded\">\n            <Toast style={{'maxWidth':'1400px','marginTop':'20px'}}>\n            <ToastHeader>\n                Employee List\n            </ToastHeader>\n            <ToastBody>\n                <Table className='main-table' columns={columns} dataSource={userinfo} />\n            </ToastBody>\n            </Toast>\n        </div>\n        </React.Fragment>\n    )\n}","import React from 'react';\nimport queryString from 'query-string';\nimport UserTable from './UserTable'\nimport {connect} from 'react-redux'\n\nconst Dashboard=(props)=>{\n    \n        const user_name=props.Credentials.username;\n        const pass=props.Credentials.password;\n        const {email,password}=queryString.parse(decodeURIComponent(props.location.search))\n        \n            if(email===user_name && password===pass){\n               return(\n                   <div>\n                        <UserTable users={props.users_data}/>\n                   </div>)\n            }else{\n\n                   return( window.location.href='/')\n             }\n}\n\nconst mapStateToProps=(state)=>{\n\n    return {Credentials:state.Credentials,\n            users_data:state.users};\n}\n\nexport default connect(mapStateToProps)(Dashboard);","import React from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport Login from './Components/Login'\nimport Dashboard from './Components/Dashboard';\nimport { BrowserRouter as Router, Route ,Switch} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Router>\n      <Switch>       \n        <Route exact path=\"/\" component={Login} />\n\n       <Route exact path=\"/dashboard\" component={Dashboard} />\n       </Switch>\n\n       </Router>\n     \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux'; \nconst Credentials=()=>{\n\n    return (\n        {\n            'username':'hruday@gmail.com',\n            'password':'hruday123'\n        }\n    )\n}\n\nconst UserInfo=()=>{\n\n    return[\n        {\n            \"id\":1,\n            \"name\":\"test1\",\n            \"age\" : \"11\",\n            \"gender\":\"male\",\n            \"email\" : \"test1@gmail.com\",\n            \"phoneNo\" : \"9415346313\"\n            },\n            {\n            \"id\" : 2,\n            \"name\":\"test2\",\n            \"age\" : \"12\",\n            \"gender\":\"male\",\n            \"email\" : \"test2@gmail.com\",\n            \"phoneNo\" : \"9415346314\"\n            },\n            {\n            \"id\":3,\n            \"name\":\"test3\",\n            \"age\" : \"13\",\n            \"gender\":\"male\",\n            \"email\" : \"test3@gmail.com\",\n            \"phoneNo\" : \"9415346315\"\n            },\n            {\n            \"id\":4,\n            \"name\":\"test4\",\n            \"age\" : \"14\",\n            \"gender\":\"male\",\n            \"email\" : \"test4@gmail.com\",\n            \"phoneNo\" : \"9415346316\"\n            },\n            {\n            \"id\":5,\n            \"name\":\"test5\",\n            \"age\" : \"15\",\n            \"gender\":\"male\",\n            \"email\" : \"test5@gmail.com\",\n            \"phoneNo\" : \"9415346317\"\n            },\n            {\n            \"id\":6,\n            \"name\":\"test6\",\n            \"age\" : \"16\",\n            \"gender\":\"male\",\n            \"email\" : \"test6@gmail.com\",\n            \"phoneNo\" : \"9415346318\"\n            }\n    ]\n}\n\nexport default combineReducers({\n    users:UserInfo,\n    Credentials:Credentials\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport { createStore} from 'redux';\nimport reducers from './reducers'\n\nReactDOM.render(\n  <Provider store={createStore(reducers)}>\n     <App />\n  </Provider>\n    \n  ,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}